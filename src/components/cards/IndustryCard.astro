---
import { Image } from 'astro:assets';

// [Props]
const { icon, title, description, className } = Astro.props;

// [Components]
let IconComponent;
try {
	IconComponent = await import(`../../assets/icons/${icon}.astro`).then(
		(module) => module.default
	);
} catch (e) {
	console.error(`Failed to load icon: ${icon}`);
}
---

<div
	class=`card relative shadow-lg px-5 py-6 basis-full min-w-[300px] tablet:basis-[32%] grow
shrink-0 rounded-[0.875rem] overflow-hidden desktop:h-[420px] flex flex-col gap-6 group text-contrast-permanent ${className}`
>
	<div class="top-wrapper flex flex-col gap-4 items-start z-10">
		<span
			class=`icon-wrapper origin-top-left w-[4rem] h-[4rem] group-hover:text-branded-blue`
		>
			{
				IconComponent && (
					<IconComponent
						width="100%"
						height="100%"
						className="[transition:none!important]"
					/>
				)
			}
		</span>
		<div
			class="title font-secondary text-[1.25rem] desktop:text-[2.5rem] desktop:leading-none text-wrap uppercase font-bold text-contrast-permanent group-hover:text-light-permanent w-full origin-top-left"
		>
			{title}
		</div>
	</div>
	<div class="flex flex-col h-100% justify-between flex-grow z-10">
		<div class="text-body leading-5 text-light-permanent">
			{description}
		</div>
		<a
			href="/contact"
			class="link uppercase w-fit text-primary-blue font-bold font-secondary text-topper z-10 relative"
			>get started</a
		>
	</div>
	<div
		class="bg-wrapper absolute bottom-0 left-0 w-fit h-full flex items-end bg-black/20 z-0"
	>
		<Image
			src="/src/assets/toronto-skyline.png"
			alt="Toronto skyline"
			class="object-contain brightness-30 contrast-125"
			height="400"
			width="400"
		/>
	</div>
</div>

<style>
	a::after {
		content: '';
		width: 100%;
		height: 2px;
		background-color: var(--color-light-permanent);
		position: absolute;
		bottom: 0;
		left: 0;
		transform: scaleX(0); /* Initially hidden */
		transform-origin: center; /* Animates from left to right */
		transition: transform 0.3s ease-in-out; /* Smooth transition */
	}

	a:hover::after {
		transform: scaleX(1); /* Expands the underline */
	}
</style>
